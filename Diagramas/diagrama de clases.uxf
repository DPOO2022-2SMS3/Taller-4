<diagram program="umletino" version="15.0.0"><zoom_level>9</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>495</x><y>126</y><w>216</w><h>135</h></coordinates><panel_attributes>_InterfazLightsOut_
--
- ventana: JPanel
- juegoIniciado: boolean 
--
+ agregarTablero(): void
+ eliminarTablero(): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1161</x><y>378</y><w>207</w><h>135</h></coordinates><panel_attributes>_PanelInferior_
--
+ int sizeTablero: int
- Tablero tablero
- tableroActual: boolean[][]
- jugadas: JLabel
--
actualizarJugadas(int contador): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>846</x><y>126</y><w>243</w><h>171</h></coordinates><panel_attributes>_PanelSuperior_
--
- size: JLabel
- comboBox: JComboBox&lt;String&gt; comboBox
- dificultad: JLabel
- facil: JRadioButton
- medio: JRadioButton
- dificil: JRadioButton
- sizeTablero: int= "3"
- dificultadTablero: int
--
+ actionPerformed(ActionEvent e): void
+ itemStateChanged(ItemEvent e): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>819</x><y>324</y><w>261</w><h>180</h></coordinates><panel_attributes>_PruebaTablero_
--
- size: int
- int width: int
- tableroActual: boolean[][]
- cantidades: int[][]
- ultima_columna: int
- ultima_fila: int
--
+ paintComponent(Graphics h): void
+ optionPaneWin(): void
+ convertirCoordenadasACasilla(int x, int y): int[]


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1134</x><y>153</y><w>216</w><h>108</h></coordinates><panel_attributes>_PanelIzq_
--
+ int sizeTablero: int
- Tablero tablero
- tableroActual: boolean[][]
--
+ actionPerformed(ActionEvent e): void
+ DialogTop10(): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>234</x><y>252</y><w>189</w><h>180</h></coordinates><panel_attributes>Tablero
--
- tablero: boolean[][]
- tablero_original: boolean[][]
- jugadas: int
--
+ reiniciar (): void
+ salvar_tablero(): void
+ desordenar(int dificultad): void
+ darJugadas(): int
+ darTablero(): boolean[][]
+ jugar(): void
+ tableroIluminado(): boolean
+ calcularPuntaje(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>468</x><y>486</y><w>270</w><h>126</h></coordinates><panel_attributes>Top10
--
- registros: PriorityQueue&lt;RegistroTop10&gt;
- peorPuntaje: int
--
+ esTop10(int puntaje): boolean
+ agregarRegistro(String nombre, int puntaje): void
+ darRegistros(): Collection&lt;RegistroTop10&gt;
+ salvarRecords(File archivo): void
+ cargarRecords(File archivo): void

group=group-0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>513</x><y>315</y><w>171</w><h>108</h></coordinates><panel_attributes>RegistroTop10
--
- nombre: String
- puntos: int
--
//+ registroTop10(String nombre, int puntos): void
+ darPuntos(): int
+ darNombre(): String
+ toString(): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>594</x><y>252</y><w>27</w><h>81</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>315</x><y>180</y><w>198</w><h>90</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;80;10;10;200;10</additional_attributes></element><element><id>Relation</id><coordinates><x>594</x><y>414</y><w>27</w><h>90</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>0</x><y>81</y><w>216</w><h>99</h></coordinates><panel_attributes>bg=#ffb0fe

**salvar_tablero()**

Copia el tablero actual sobre la matriz 
tablero_original</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>0</x><y>468</y><w>216</w><h>99</h></coordinates><panel_attributes>bg=#ffb0fe

**reiniciar()**

Reinicia el tablero para que las casillas
tengan los valores almacenados en 
tablero_original.

Deja la cantidad de jugadas con valor 0.</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>0</x><y>279</y><w>216</w><h>180</h></coordinates><panel_attributes>bg=#ffb0fe

**desordenar(int dificultad)**

Desordena el tablero realizando una
serie de jugadas sobre posiciones
aleatorias. Si antes de ejecutar este
método el tablero estaba todo iluminado,
esto garantiza que se vaya a poder
resolver después.

El número de jugadas realizadas se
mantiene constante</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>225</x><y>441</y><w>216</w><h>126</h></coordinates><panel_attributes>bg=#ffb0fe

**jugar(int fila, int columna)**

Cambia el estado de una casilla y el
estado de las casillas que la rodean. Las 
iluminadas se apagan y viceversa. 				 				 
Incrementa en 1 el número de jugadas
realizadas hasta el momento.</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>0</x><y>189</y><w>216</w><h>81</h></coordinates><panel_attributes>bg=#ffb0fe

**tableroIluminado()**

Informa si todas las casillas del tablero
están iluminadas</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>693</x><y>621</y><w>216</w><h>81</h></coordinates><panel_attributes>bg=#ffb0fe

**esTop10(int puntaje)**

Indica si el puntaje indicado es suficiente
para entrar al top10</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>468</x><y>621</y><w>216</w><h>81</h></coordinates><panel_attributes>bg=#ffb0fe

**salvarRecords(File archivo)**
**cargarRecords(File archivo)**

Persistencia</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>702</x><y>180</y><w>162</w><h>27</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>160;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>702</x><y>234</y><w>135</w><h>153</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>130;150;60;150;60;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1071</x><y>414</y><w>108</w><h>27</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>100;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1080</x><y>198</y><w>72</w><h>27</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>60;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>729</x><y>495</y><w>225</w><h>81</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>230;10;230;70;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>414</x><y>342</y><w>567</w><h>414</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>610;180;610;440;40;440;40;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1233</x><y>252</y><w>27</w><h>144</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;140;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>423</x><y>27</y><w>279</w><h>90</h></coordinates><panel_attributes>**InterfazLightsOut**
Esta clase es la responsable de armar el Jframe
con todos sus componentes, para ello añade todos
los paneles al frame y añade el tablero de juego
que es PruebaTablero.
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>972</x><y>522</y><w>279</w><h>90</h></coordinates><panel_attributes>**PruebaTablero**
Se espera que prueba tablero realice las actividades 
correspodientes a el funcionamiento del juego, como
cambiar los colores del tablero al reconocer una 
interaccion de click, identificar si el usuario gano el 
juego y realizar la solicitud de su nombre
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>846</x><y>18</y><w>279</w><h>90</h></coordinates><panel_attributes>**PanelSuperior**
Esta clase es reponsable de recibir y hacer visibles
los datos de juego que desea el usuario, los cuales 
son el nivel de dificultad y el tamaño del tablero
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>1233</x><y>36</y><w>279</w><h>108</h></coordinates><panel_attributes>**PanelIzq**
Panel izquierdo es responsable de mostrar, recibir
y realizar aspectos relazionados con la experiencia 
de juego del usuario, y hacer modificaciones sobre 
el tablero, como reiniciar el tablero, o crear otro
 tablero con diferentes datos, a su vez, es el 
encargado de mostrar la lista de top 10
bg=green</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>279</x><y>0</y><w>954</w><h>270</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>1040;170;1040;10;10;10;10;280</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1323</x><y>522</y><w>279</w><h>63</h></coordinates><panel_attributes>**PanelInferior**
Se espera que panel inferior muestre la informacion
del juego actual, actualizando las jugadas e 
inicializandolas en 0
bg=green</panel_attributes><additional_attributes></additional_attributes></element></diagram>